trigger:
  branches:
    include: [ main, releases/* ]
pr:
  branches:
    include: [ main ]

variables:
  # you can override these at queue time or in a variable group
  DOTNET_SDK_VERSION: '8.0.x'
  SOLUTION_FILE: 'Mango.Http.sln'
  NUGET_PACKAGE_ID: 'Mango.Http'
  NUGET_PROJECT_PATH: 'src/Mango.Http/Mango.Http.csproj'
  ARTIFACT_NAME: 'nuget'
  COVERAGE_REPORT_DIR: '$(Build.SourcesDirectory)/coverage'
  NUGET_API_KEY: ''  # set this in your pipeline variables

stages:
  - stage: Build
    displayName: 'Build'
    jobs:
      - template: ../templates/build.yml
        parameters:
          dotnetVersion: ${{ variables.DOTNET_SDK_VERSION }}
          solution: ${{ variables.SOLUTION_FILE }}

  - stage: Test
    displayName: 'Test & Coverage'
    dependsOn: Build
    jobs:
      - template: ../templates/test.yml
        parameters:
          dotnetVersion: ${{ variables.DOTNET_SDK_VERSION }}
          solution: ${{ variables.SOLUTION_FILE }}
          coverageDir: ${{ variables.COVERAGE_REPORT_DIR }}

  - stage: Pack
    displayName: 'Pack'
    dependsOn: Test
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/releases/'))
    jobs:
      - template: ../templates/pack.yml
        parameters:
          dotnetVersion: ${{ variables.DOTNET_SDK_VERSION }}
          project: ${{ variables.NUGET_PROJECT_PATH }}
          packageId: ${{ variables.NUGET_PACKAGE_ID }}
          artifactName: ${{ variables.ARTIFACT_NAME }}

  - stage: Publish
    displayName: 'Publish to NuGet'
    dependsOn: Pack
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/releases/'))
    jobs:
      - template: ../templates/publish.yml
        parameters:
          feed: 'MangoHttpNuGetFeed'      # your service connection or feed name
          nugetApiKey: ${{ variables.NUGET_API_KEY }}  # set this in your pipeline variables
          artifactName: ${{ variables.ARTIFACT_NAME }}
